{"version":3,"file":"index.mjs","sources":["../lib/main.js","../lib/validate.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport iteratorSymbol from '@stdlib/symbol-iterator';\nimport format from '@stdlib/error-tools-fmtprodmsg';\nimport cospi from '@stdlib/math-base-special-cospi';\nimport validate from './validate.js';\n\n\n// VARIABLES //\n\nvar A0 = 0.21557895;\nvar A1 = 0.41663158;\nvar A2 = 0.277263158;\nvar A3 = 0.083578947;\nvar A4 = 0.006947368;\n\n\n// FUNCTIONS //\n\n/**\n* Evaluates the flat top window function.\n*\n* @private\n* @param {integer} t - value at which to evaluate the function\n* @param {number} A - amplitude\n* @param {integer} tau - period\n* @returns {number} function value\n*/\nfunction flatTop( t, A, tau ) {\n\tvar s = 2.0 / (tau-1);\n\treturn A * (A0 - (A1*cospi(s*t)) + (A2*cospi(2.0*s*t)) - (A3*cospi(3.0*s*t)) + (A4*cospi(4.0*s*t))); // eslint-disable-line max-len\n}\n\n\n// MAIN //\n\n/**\n* Returns an iterator which generates a flat top pulse waveform.\n*\n* @param {Options} [options] - function options\n* @param {PositiveInteger} [options.period=100] - number of iterations before a waveform repeats\n* @param {PositiveInteger} [options.duration=options.period] - pulse duration\n* @param {PositiveNumber} [options.amplitude=1.0] - amplitude\n* @param {integer} [options.offset=0] - phase offset (in units of iterations; zero-based)\n* @param {NonNegativeInteger} [options.iter=1e308] - number of iterations\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {RangeError} pulse duration must be less than the period\n* @throws {RangeError} pulse duration must be greater than `2`\n* @returns {Iterator} iterator\n*\n* @example\n* var opts = {\n*     'period': 10\n* };\n*\n* var iter = iterFlatTopPulse( opts );\n*\n* var v = iter.next().value;\n* // returns <number>\n*\n* v = iter.next().value;\n* // returns <number>\n*\n* v = iter.next().value;\n* // returns <number>\n*\n* // ...\n*/\nfunction iterFlatTopPulse( options ) {\n\tvar opts;\n\tvar iter;\n\tvar FLG;\n\tvar err;\n\tvar t;\n\tvar i;\n\n\topts = {\n\t\t'duration': -1,\n\t\t'period': 100,\n\t\t'amplitude': 1.0,\n\t\t'offset': 0,\n\t\t'iter': 1e308\n\t};\n\tif ( arguments.length ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tif ( opts.duration === -1 ) {\n\t\topts.duration = opts.period;\n\t}\n\tif ( opts.duration > opts.period ) {\n\t\tthrow new RangeError( format( '0tJ8K', 'duration', opts.duration ) );\n\t}\n\tif ( opts.duration <= 2 ) {\n\t\tthrow new RangeError( format( '0tJ8L', 'duration', opts.duration ) );\n\t}\n\tt = ( opts.period-opts.offset ) % opts.period;\n\tif ( t < 0 ) {\n\t\tt += opts.period;\n\t}\n\tt -= 1;\n\ti = 0;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\ti += 1;\n\t\tif ( FLG || i > opts.iter ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tt = (t+1) % opts.period;\n\t\treturn {\n\t\t\t'value': ( t < opts.duration ) ? flatTop( t, opts.amplitude, opts.duration ) : 0.0,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterFlatTopPulse( opts );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default iterFlatTopPulse;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isPlainObject from '@stdlib/assert-is-plain-object';\nimport hasOwnProp from '@stdlib/assert-has-own-property';\nimport { isPrimitive as isPositiveNumber } from '@stdlib/assert-is-positive-number';\nimport { isPrimitive as isInteger } from '@stdlib/assert-is-integer';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert-is-positive-integer';\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert-is-nonnegative-integer';\nimport format from '@stdlib/error-tools-fmtprodmsg';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {PositiveInteger} [options.period] - number of iterations before a waveform repeats\n* @param {PositiveInteger} [options.duration] - pulse duration\n* @param {PositiveNumber} [options.amplitude] - amplitude\n* @param {integer} [options.offset] - phase offset (in units of iterations)\n* @param {NonNegativeInteger} [options.iter] - number of iterations\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'iter': 100\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isPlainObject( options ) ) {\n\t\treturn new TypeError( format( '0tJ2V', options ) );\n\t}\n\tif ( hasOwnProp( options, 'duration' ) ) {\n\t\topts.duration = options.duration;\n\t\tif ( !isPositiveInteger( options.duration ) ) {\n\t\t\treturn new TypeError( format( '0tJ3P', 'duration', options.duration ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'period' ) ) {\n\t\topts.period = options.period;\n\t\tif ( !isPositiveInteger( options.period ) ) {\n\t\t\treturn new TypeError( format( '0tJ3P', 'period', options.period ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'amplitude' ) ) {\n\t\topts.amplitude = options.amplitude;\n\t\tif ( !isPositiveNumber( options.amplitude ) ) {\n\t\t\treturn new TypeError( format( '0tJ4D', 'amplitude', options.amplitude ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'offset' ) ) {\n\t\topts.offset = options.offset;\n\t\tif ( !isInteger( options.offset ) ) {\n\t\t\treturn new TypeError( format( '0tJ8M', 'offset', options.offset ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'iter' ) ) {\n\t\topts.iter = options.iter;\n\t\tif ( !isNonNegativeInteger( options.iter ) ) {\n\t\t\treturn new TypeError( format( '0tJ2t', 'iter', options.iter ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n"],"names":["A0","A1","A2","A3","A4","flatTop","t","A","tau","s","cospi","iterFlatTopPulse","options","opts","iter","FLG","err","i","duration","period","amplitude","offset","arguments","length","isPlainObject","hasOwnProp","isPositiveInteger","TypeError","format","isPositiveNumber","isInteger","isNonNegativeInteger","validate","RangeError","setReadOnly","done","value","iteratorSymbol"],"mappings":";;iiCA+BA,IAAIA,EAAK,UACLC,EAAK,UACLC,EAAK,WACLC,EAAK,WACLC,EAAK,WAcT,SAASC,EAASC,EAAGC,EAAGC,GACvB,IAAIC,EAAI,GAAOD,EAAI,GACnB,OAAOD,GAAKP,EAAMC,EAAGS,EAAMD,EAAEH,GAAOJ,EAAGQ,EAAM,EAAID,EAAEH,GAAOH,EAAGO,EAAM,EAAID,EAAEH,GAAOF,EAAGM,EAAM,EAAID,EAAEH,GAChG,CAsCA,SAASK,EAAkBC,GAC1B,IAAIC,EACAC,EACAC,EACAC,EACAV,EACAW,EASJ,GAPAJ,EAAO,CACNK,UAAa,EACbC,OAAU,IACVC,UAAa,EACbC,OAAU,EACVP,KAAQ,OAEJQ,UAAUC,SACdP,EClDF,SAAmBH,EAAMD,GACxB,OAAMY,EAAeZ,GAGhBa,EAAYb,EAAS,cACzBC,EAAKK,SAAWN,EAAQM,UAClBQ,EAAmBd,EAAQM,WACzB,IAAIS,UAAWC,EAAQ,QAAS,WAAYhB,EAAQM,WAGxDO,EAAYb,EAAS,YACzBC,EAAKM,OAASP,EAAQO,QAChBO,EAAmBd,EAAQO,SACzB,IAAIQ,UAAWC,EAAQ,QAAS,SAAUhB,EAAQO,SAGtDM,EAAYb,EAAS,eACzBC,EAAKO,UAAYR,EAAQQ,WACnBS,EAAkBjB,EAAQQ,YACxB,IAAIO,UAAWC,EAAQ,QAAS,YAAahB,EAAQQ,YAGzDK,EAAYb,EAAS,YACzBC,EAAKQ,OAAST,EAAQS,QAChBS,EAAWlB,EAAQS,SACjB,IAAIM,UAAWC,EAAQ,QAAS,SAAUhB,EAAQS,SAGtDI,EAAYb,EAAS,UACzBC,EAAKC,KAAOF,EAAQE,MACdiB,EAAsBnB,EAAQE,OAC5B,IAAIa,UAAWC,EAAQ,QAAS,OAAQhB,EAAQE,OAGlD,KAhCC,IAAIa,UAAWC,EAAQ,QAAShB,GAiCzC,CDeQoB,CAAUnB,EAAMD,GACjBI,GACJ,MAAMA,EAMR,IAHwB,IAAnBH,EAAKK,WACTL,EAAKK,SAAWL,EAAKM,QAEjBN,EAAKK,SAAWL,EAAKM,OACzB,MAAM,IAAIc,WAAYL,EAAQ,QAAS,WAAYf,EAAKK,WAEzD,GAAKL,EAAKK,UAAY,EACrB,MAAM,IAAIe,WAAYL,EAAQ,QAAS,WAAYf,EAAKK,WAkBzD,OAhBAZ,GAAMO,EAAKM,OAAON,EAAKQ,QAAWR,EAAKM,QAC9B,IACRb,GAAKO,EAAKM,QAEXb,GAAK,EACLW,EAAI,EAIJiB,EADApB,EAAO,CAAA,EACY,QAenB,WAEC,GADAG,GAAK,EACAF,GAAOE,EAAIJ,EAAKC,KACpB,MAAO,CACNqB,MAAQ,GAIV,MAAO,CACNC,OAFD9B,GAAKA,EAAE,GAAKO,EAAKM,QAEDN,EAAKK,SAAab,EAASC,EAAGO,EAAKO,UAAWP,EAAKK,UAAa,EAC/EiB,MAAQ,EAET,IA1BDD,EAAapB,EAAM,UAmCnB,SAAcsB,GAEb,GADArB,GAAM,EACDO,UAAUC,OACd,MAAO,CACNa,MAASA,EACTD,MAAQ,GAGV,MAAO,CACNA,MAAQ,EAET,IA3CIE,GACJH,EAAapB,EAAMuB,GAkDpB,WACC,OAAO1B,EAAkBE,EACzB,IAlDMC,CAmDR"}