{
  "version": 3,
  "sources": ["../lib/validate.js", "../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPlainObject = require( '@stdlib/assert-is-plain-object' );\nvar hasOwnProp = require( '@stdlib/assert-has-own-property' );\nvar isPositiveNumber = require( '@stdlib/assert-is-positive-number' ).isPrimitive;\nvar isInteger = require( '@stdlib/assert-is-integer' ).isPrimitive;\nvar isPositiveInteger = require( '@stdlib/assert-is-positive-integer' ).isPrimitive;\nvar isNonNegativeInteger = require( '@stdlib/assert-is-nonnegative-integer' ).isPrimitive;\nvar format = require( '@stdlib/string-format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {PositiveInteger} [options.period] - number of iterations before a waveform repeats\n* @param {PositiveInteger} [options.duration] - pulse duration\n* @param {PositiveNumber} [options.amplitude] - amplitude\n* @param {integer} [options.offset] - phase offset (in units of iterations)\n* @param {NonNegativeInteger} [options.iter] - number of iterations\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'iter': 100\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isPlainObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'duration' ) ) {\n\t\topts.duration = options.duration;\n\t\tif ( !isPositiveInteger( options.duration ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'duration', options.duration ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'period' ) ) {\n\t\topts.period = options.period;\n\t\tif ( !isPositiveInteger( options.period ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'period', options.period ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'amplitude' ) ) {\n\t\topts.amplitude = options.amplitude;\n\t\tif ( !isPositiveNumber( options.amplitude ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive number. Option: `%s`.', 'amplitude', options.amplitude ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'offset' ) ) {\n\t\topts.offset = options.offset;\n\t\tif ( !isInteger( options.offset ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be an integer. Option: `%s`.', 'offset', options.offset ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'iter' ) ) {\n\t\topts.iter = options.iter;\n\t\tif ( !isNonNegativeInteger( options.iter ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a nonnegative integer. Option: `%s`.', 'iter', options.iter ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-nonenumerable-read-only-property' );\nvar iteratorSymbol = require( '@stdlib/symbol-iterator' );\nvar format = require( '@stdlib/string-format' );\nvar cospi = require( '@stdlib/math-base-special-cospi' );\nvar validate = require( './validate.js' );\n\n\n// VARIABLES //\n\nvar A0 = 0.21557895;\nvar A1 = 0.41663158;\nvar A2 = 0.277263158;\nvar A3 = 0.083578947;\nvar A4 = 0.006947368;\n\n\n// FUNCTIONS //\n\n/**\n* Evaluates the flat top window function.\n*\n* @private\n* @param {integer} t - value at which to evaluate the function\n* @param {number} A - amplitude\n* @param {integer} tau - period\n* @returns {number} function value\n*/\nfunction flatTop( t, A, tau ) {\n\tvar s = 2.0 / (tau-1);\n\treturn A * (A0 - (A1*cospi(s*t)) + (A2*cospi(2.0*s*t)) - (A3*cospi(3.0*s*t)) + (A4*cospi(4.0*s*t))); // eslint-disable-line max-len\n}\n\n\n// MAIN //\n\n/**\n* Returns an iterator which generates a flat top pulse waveform.\n*\n* @param {Options} [options] - function options\n* @param {PositiveInteger} [options.period=100] - number of iterations before a waveform repeats\n* @param {PositiveInteger} [options.duration=options.period] - pulse duration\n* @param {PositiveNumber} [options.amplitude=1.0] - amplitude\n* @param {integer} [options.offset=0] - phase offset (in units of iterations; zero-based)\n* @param {NonNegativeInteger} [options.iter=1e308] - number of iterations\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {RangeError} pulse duration must be less than the period\n* @throws {RangeError} pulse duration must be greater than `2`\n* @returns {Iterator} iterator\n*\n* @example\n* var opts = {\n*     'period': 10\n* };\n*\n* var iter = iterFlatTopPulse( opts );\n*\n* var v = iter.next().value;\n* // returns <number>\n*\n* v = iter.next().value;\n* // returns <number>\n*\n* v = iter.next().value;\n* // returns <number>\n*\n* // ...\n*/\nfunction iterFlatTopPulse( options ) {\n\tvar opts;\n\tvar iter;\n\tvar FLG;\n\tvar err;\n\tvar t;\n\tvar i;\n\n\topts = {\n\t\t'duration': -1,\n\t\t'period': 100,\n\t\t'amplitude': 1.0,\n\t\t'offset': 0,\n\t\t'iter': 1e308\n\t};\n\tif ( arguments.length ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tif ( opts.duration === -1 ) {\n\t\topts.duration = opts.period;\n\t}\n\tif ( opts.duration > opts.period ) {\n\t\tthrow new RangeError( format( 'invalid option. `%s` option must be less than or equal to the period. Option: `%u`.', 'duration', opts.duration ) );\n\t}\n\tif ( opts.duration <= 2 ) {\n\t\tthrow new RangeError( format( 'invalid option. `%s` option must be greater than 2. Option: `%s`.', 'duration', opts.duration ) );\n\t}\n\tt = ( opts.period-opts.offset ) % opts.period;\n\tif ( t < 0 ) {\n\t\tt += opts.period;\n\t}\n\tt -= 1;\n\ti = 0;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\ti += 1;\n\t\tif ( FLG || i > opts.iter ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tt = (t+1) % opts.period;\n\t\treturn {\n\t\t\t'value': ( t < opts.duration ) ? flatTop( t, opts.amplitude, opts.duration ) : 0.0,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterFlatTopPulse( opts );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterFlatTopPulse;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which generates a flat top pulse waveform.\n*\n* @module @stdlib/simulate-iter-flat-top-pulse\n*\n* @example\n* var iterFlatTopPulse = require( '@stdlib/simulate-iter-flat-top-pulse' );\n*\n* var opts = {\n*     'period': 10\n* };\n*\n* var iter = iterFlatTopPulse( opts );\n*\n* var v = iter.next().value;\n* // returns <number>\n*\n* v = iter.next().value;\n* // returns <number>\n*\n* v = iter.next().value;\n* // returns <number>\n*\n* // ...\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAgB,QAAS,gCAAiC,EAC1DC,EAAa,QAAS,iCAAkC,EACxDC,EAAmB,QAAS,mCAAoC,EAAE,YAClEC,EAAY,QAAS,2BAA4B,EAAE,YACnDC,EAAoB,QAAS,oCAAqC,EAAE,YACpEC,EAAuB,QAAS,uCAAwC,EAAE,YAC1EC,EAAS,QAAS,uBAAwB,EA4B9C,SAASC,EAAUC,EAAMC,EAAU,CAClC,OAAMT,EAAeS,CAAQ,EAGxBR,EAAYQ,EAAS,UAAW,IACpCD,EAAK,SAAWC,EAAQ,SACnB,CAACL,EAAmBK,EAAQ,QAAS,GAClC,IAAI,UAAWH,EAAQ,wEAAyE,WAAYG,EAAQ,QAAS,CAAE,EAGnIR,EAAYQ,EAAS,QAAS,IAClCD,EAAK,OAASC,EAAQ,OACjB,CAACL,EAAmBK,EAAQ,MAAO,GAChC,IAAI,UAAWH,EAAQ,wEAAyE,SAAUG,EAAQ,MAAO,CAAE,EAG/HR,EAAYQ,EAAS,WAAY,IACrCD,EAAK,UAAYC,EAAQ,UACpB,CAACP,EAAkBO,EAAQ,SAAU,GAClC,IAAI,UAAWH,EAAQ,uEAAwE,YAAaG,EAAQ,SAAU,CAAE,EAGpIR,EAAYQ,EAAS,QAAS,IAClCD,EAAK,OAASC,EAAQ,OACjB,CAACN,EAAWM,EAAQ,MAAO,GACxB,IAAI,UAAWH,EAAQ,gEAAiE,SAAUG,EAAQ,MAAO,CAAE,EAGvHR,EAAYQ,EAAS,MAAO,IAChCD,EAAK,KAAOC,EAAQ,KACf,CAACJ,EAAsBI,EAAQ,IAAK,GACjC,IAAI,UAAWH,EAAQ,2EAA4E,OAAQG,EAAQ,IAAK,CAAE,EAG5H,KAhCC,IAAI,UAAWH,EAAQ,qEAAsEG,CAAQ,CAAE,CAiChH,CAKAV,EAAO,QAAUQ,IChGjB,IAAAG,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAc,QAAS,uDAAwD,EAC/EC,EAAiB,QAAS,yBAA0B,EACpDC,EAAS,QAAS,uBAAwB,EAC1CC,EAAQ,QAAS,iCAAkC,EACnDC,EAAW,IAKXC,EAAK,UACLC,EAAK,UACLC,EAAK,WACLC,EAAK,WACLC,EAAK,WAcT,SAASC,EAASC,EAAGC,EAAGC,EAAM,CAC7B,IAAIC,EAAI,GAAOD,EAAI,GACnB,OAAOD,GAAKP,EAAMC,EAAGH,EAAMW,EAAEH,CAAC,EAAMJ,EAAGJ,EAAM,EAAIW,EAAEH,CAAC,EAAMH,EAAGL,EAAM,EAAIW,EAAEH,CAAC,EAAMF,EAAGN,EAAM,EAAIW,EAAEH,CAAC,EACjG,CAsCA,SAASI,EAAkBC,EAAU,CACpC,IAAIC,EACAC,EACAC,EACAC,EACAT,EACAU,EASJ,GAPAJ,EAAO,CACN,SAAY,GACZ,OAAU,IACV,UAAa,EACb,OAAU,EACV,KAAQ,KACT,EACK,UAAU,SACdG,EAAMhB,EAAUa,EAAMD,CAAQ,EACzBI,GACJ,MAAMA,EAMR,GAHKH,EAAK,WAAa,KACtBA,EAAK,SAAWA,EAAK,QAEjBA,EAAK,SAAWA,EAAK,OACzB,MAAM,IAAI,WAAYf,EAAQ,sFAAuF,WAAYe,EAAK,QAAS,CAAE,EAElJ,GAAKA,EAAK,UAAY,EACrB,MAAM,IAAI,WAAYf,EAAQ,oEAAqE,WAAYe,EAAK,QAAS,CAAE,EAEhI,OAAAN,GAAMM,EAAK,OAAOA,EAAK,QAAWA,EAAK,OAClCN,EAAI,IACRA,GAAKM,EAAK,QAEXN,GAAK,EACLU,EAAI,EAGJH,EAAO,CAAC,EACRlB,EAAakB,EAAM,OAAQI,CAAK,EAChCtB,EAAakB,EAAM,SAAUK,CAAI,EAG5BtB,GACJD,EAAakB,EAAMjB,EAAgBuB,CAAQ,EAErCN,EAQP,SAASI,GAAO,CAEf,OADAD,GAAK,EACAF,GAAOE,EAAIJ,EAAK,KACb,CACN,KAAQ,EACT,GAEDN,GAAKA,EAAE,GAAKM,EAAK,OACV,CACN,MAAWN,EAAIM,EAAK,SAAaP,EAASC,EAAGM,EAAK,UAAWA,EAAK,QAAS,EAAI,EAC/E,KAAQ,EACT,EACD,CASA,SAASM,EAAKE,EAAQ,CAErB,OADAN,EAAM,GACD,UAAU,OACP,CACN,MAASM,EACT,KAAQ,EACT,EAEM,CACN,KAAQ,EACT,CACD,CAQA,SAASD,GAAU,CAClB,OAAOT,EAAkBE,CAAK,CAC/B,CACD,CAKAlB,EAAO,QAAUgB,IChJjB,IAAIW,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_validate", "__commonJSMin", "exports", "module", "isPlainObject", "hasOwnProp", "isPositiveNumber", "isInteger", "isPositiveInteger", "isNonNegativeInteger", "format", "validate", "opts", "options", "require_main", "__commonJSMin", "exports", "module", "setReadOnly", "iteratorSymbol", "format", "cospi", "validate", "A0", "A1", "A2", "A3", "A4", "flatTop", "t", "A", "tau", "s", "iterFlatTopPulse", "options", "opts", "iter", "FLG", "err", "i", "next", "end", "factory", "value", "main"]
}
